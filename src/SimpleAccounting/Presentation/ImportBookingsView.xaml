<!-- Copyright (c) Lukas Grützmacher. All rights reserved. -->
<UserControl
  x:Class="lg2de.SimpleAccounting.Presentation.ImportBookingsView"
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
  xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
  xmlns:local="clr-namespace:lg2de.SimpleAccounting.Presentation"
  xmlns:properties="clr-namespace:lg2de.SimpleAccounting.Properties"
  mc:Ignorable="d"
  MinWidth="900" MinHeight="600"
  d:DataContext="{d:DesignInstance Type=local:ImportBookingsDesignViewModel, IsDesignTimeCreatable=True}">
  <Grid>
    <DockPanel>
      <DockPanel.Resources>
        <Style TargetType="local:NumberTextBox">
          <Setter Property="Margin" Value="5" />
          <Setter Property="Height" Value="30" />
          <Setter Property="VerticalContentAlignment" Value="Center" />
        </Style>
        <local:InverseBooleanConverter x:Key="InverseBooleanConverter" />
      </DockPanel.Resources>
      <StackPanel
        DockPanel.Dock="Top"
        Orientation="Horizontal">
        <TextBlock Padding="5" Text="{x:Static properties:Resources.ImportData_Notes}" />
        <local:NumberTextBox
          Width="100"
          Text="{Binding SelectedAccountNumber, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
        <ComboBox
          Width="150"
          ItemsSource="{Binding ImportAccounts}"
          SelectedValue="{Binding SelectedAccountNumber, Mode=TwoWay}"
          SelectedItem="{Binding SelectedAccount, Mode=TwoWay}"
          SelectedValuePath="ID" ItemTemplate="{StaticResource AccountSelectionTemplate}" />
      </StackPanel>
      <StackPanel
        DockPanel.Dock="Top"
        Orientation="Horizontal">
        <CheckBox
          VerticalAlignment="Center"
          IsChecked="{Binding IsForceEnglish}"
          Content="{x:Static properties:Resources.ImportData_FileHasEnglishFormat}" />
        <Button
          Width="100"
          Content="{x:Static properties:Resources.Action_LoadData}"
          Command="{Binding LoadDataCommand}" />
        <TextBlock
          VerticalAlignment="Center" Margin="20,0,0,0"
          Text="{x:Static properties:Resources.ImportData_StartImport}" />
        <DatePicker
          SelectedDate="{Binding StartDate}"
          DisplayDateStart="{Binding RangeMin, Mode=OneWay}" DisplayDateEnd="{Binding RangeMax, Mode=OneWay}"
          Height="30"
          IsTodayHighlighted="True" />
      </StackPanel>
      <StackPanel
        DockPanel.Dock="Top"
        Orientation="Horizontal">
        <Button
          Width="100"
          Content="{x:Static properties:Resources.Action_BookPartially}"
          ToolTip="{x:Static properties:Resources.Tooltip_BookPartially}"
          Command="{Binding BookMappedCommand}" />
        <Button
          Width="100"
          Content="{x:Static properties:Resources.Action_BookAll}"
          Command="{Binding BookAllCommand}" />

        <Button Content="CloseDummy" IsCancel="True" Width="0" Height="0" />
      </StackPanel>
      <DataGrid
        DockPanel.Dock="Bottom"
        ItemsSource="{Binding ImportDataFiltered}"
        AutoGenerateColumns="False"
        CanUserResizeColumns="True"
        CanUserAddRows="False" CanUserDeleteRows="False">
        <DataGrid.Columns>
          <DataGridTextColumn Header="{x:Static properties:Resources.Word_Date}" Binding="{Binding Date, StringFormat=\{0:d\}}" IsReadOnly="True" />
          <DataGridTextColumn Header="{x:Static properties:Resources.Word_BookingNumber_Short}" Binding="{Binding Identifier}" />
          <DataGridTextColumn Header="{x:Static properties:Resources.Word_Recipient}" Binding="{Binding Name}" Width="200" />
          <DataGridTextColumn Header="{x:Static properties:Resources.Word_BookingText}" Binding="{Binding Text}" Width="200" />
          <DataGridTextColumn
            Header="{x:Static properties:Resources.Word_Value}"
            Binding="{Binding Value, StringFormat=\{0:0.00\}}"
            ElementStyle="{StaticResource ValueGridStyle}" />
          <DataGridCheckBoxColumn Header="{x:Static properties:Resources.Word_Skip}"
                                  Binding="{Binding IsSkip, UpdateSourceTrigger=PropertyChanged}" />
          <DataGridTemplateColumn
            Header="{x:Static properties:Resources.Word_RemoteAccount}" MinWidth="150">
            <DataGridTemplateColumn.CellTemplate>
              <DataTemplate DataType="{x:Type local:ImportEntryViewModel}">
                <Grid>
                  <ComboBox
                    Margin="0"
                    Visibility="{Binding IsCandidate, Converter={StaticResource BooleanToVisibilityConverter}}"
                    IsEnabled="{Binding IsSkip, Converter={StaticResource InverseBooleanConverter}}"
                    ItemsSource="{Binding Accounts}"
                    SelectedItem="{Binding RemoteAccount, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                    ItemTemplate="{StaticResource AccountSelectionTemplate}"
                    TextSearch.TextPath="Name" />
                  <ContentControl
                    Visibility="{Binding IsExisting, Converter={StaticResource BooleanToVisibilityConverter}}"
                    Content="{Binding RemoteAccount}"
                    ContentTemplate="{StaticResource AccountSelectionTemplate}" />
                </Grid>
              </DataTemplate>
            </DataGridTemplateColumn.CellTemplate>
          </DataGridTemplateColumn>
          <DataGridCheckBoxColumn Header="{x:Static properties:Resources.Word_IsFollowup}" Binding="{Binding IsFollowup}" />
          <DataGridTemplateColumn>
            <DataGridTemplateColumn.CellTemplate>
              <DataTemplate DataType="{x:Type local:ImportEntryViewModel}">
                <Button
                  Width="30" Height="30" Padding="0" Margin="0"
                  Content="X"
                  ToolTip="{x:Static properties:Resources.Word_ResetAssignment}"
                  Command="{Binding ResetRemoteAccountCommand}" />
              </DataTemplate>
            </DataGridTemplateColumn.CellTemplate>
          </DataGridTemplateColumn>
        </DataGrid.Columns>
        <DataGrid.CellStyle>
          <Style TargetType="{x:Type DataGridCell}">
            <Setter Property="Template">
              <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridCell}">
                  <Grid Background="{TemplateBinding Background}">
                    <ContentPresenter VerticalAlignment="Center" Margin="2" />
                  </Grid>
                </ControlTemplate>
              </Setter.Value>
            </Setter>
            <Style.Triggers>
              <DataTrigger Binding="{Binding IsExisting}" Value="True">
                <Setter Property="Background" Value="LightGray" />
                <Setter Property="IsEnabled" Value="False" />
              </DataTrigger>
            </Style.Triggers>
          </Style>
        </DataGrid.CellStyle>
      </DataGrid>
    </DockPanel>
    <Grid Background="Gray" Opacity="0.5"
          Visibility="{Binding IsBusy, Converter={StaticResource BooleanToVisibilityConverter}}">
      <Rectangle Width="150" Height="50" Fill="White" />
      <ProgressBar
        Width="100" Height="20"
        IsIndeterminate="True" />
    </Grid>
  </Grid>
</UserControl>
